openapi: 3.0.1
info:
  title: Online Order API
  version: 1.0.0
  description: >
    A basic API for managing user groups, records, user registration, and LINE login.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /mrsaccountant/user/groups:
    get:
      summary: Retrieve all groups for the authenticated user
      description: Fetches all groups associated with the authenticated user.
      operationId: getUserGroups
      responses:
        '200':
          description: A list of user groups.
          content:
            application/json:
              examples:
                userAllGroups:
                  summary: Sample response
                  value:
                    - groupName: Marketing Team
                      createdAt: "2024-11-21"
                      groupTransactions: []
                      groupId: 2
                    - groupName: Test Group
                      createdAt: "2024-11-21"
                      groupTransactions: []
                      groupId: 6
        '204':
          description: No groups found for the user.
        default:
          description: An error occurred while retrieving user groups.
      tags:
        - User Groups
    post:
      summary: Create a new group for the authenticated user
      description: Adds a new group to the authenticated user's account.
      operationId: createUserGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupName:
                  type: string
                  description: The name of the new group.
              required:
                - groupName
      responses:
        '201':
          description: Group created successfully.
          content:
            application/json:
              schema:
                type: string
                example: Group added successfully!
        '400':
          description: Invalid group data provided.
        default:
          description: An error occurred while creating the group.
      tags:
        - User Groups

  /group/user/{userId}/{groupId}:
    post:
      summary: Add a user to a group
      description: Adds a user to a specific group by their IDs.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to be added to the group
          schema:
            type: integer
        - name: groupId
          in: path
          required: true
          description: ID of the group to which the user will be added
          schema:
            type: integer
      responses:
        '200':
          description: User successfully added to the group
          content:
            application/json:
              schema:
                type: string
                example: "User successfully added to the group."
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: string
                example: "Invalid input data"
        '404':
          description: User or Group not found
          content:
            application/json:
              schema:
                type: string
                examples:
                  UserNotFound:
                    summary: User not found
                    value: "User not found with ID: {userId}"
                  GroupNotFound:
                    summary: Group not found
                    value: "Group not found with ID: {groupId}"
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: string
                example: "An unexpected error occurred."
      tags:
        - User Management

  /group/transaction/{groupId}:
    post:
      summary: Create a new group transaction
      description: Creates a transaction for the specified group with transaction splits.
      parameters:
        - name: groupId
          in: path
          required: true
          description: The ID of the group for which the transaction is being created
          schema:
            type: integer
      requestBody:
        required: true
        description: Details of the group transaction to be created
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: Total amount of the transaction
                  example: 1500.0
                type:
                  type: string
                  description: Type of the transaction (e.g., EXPENSE, INCOME, TRANSFER)
                  example: EXPENSE
                category:
                  type: string
                  description: Category of the transaction (e.g., Food, Travel)
                  example: Food
                date:
                  type: string
                  format: date
                  description: Date of the transaction in YYYY-MM-DD format
                  example: 2024-12-05
                name:
                  type: string
                  description: Name or description of the transaction
                  example: Dinner with friends
                transactionSplits:
                  type: array
                  description: List of transaction splits associated with the group transaction
                  items:
                    type: object
                    properties:
                      userId:
                        type: integer
                        description: ID of the user associated with the split
                        example: 1
                      amount:
                        type: number
                        description: Amount allocated to the user
                        example: 750.0
                      role:
                        type: string
                        description: Role of the user in the transaction (e.g., PAYER, RECEIVER)
                        example: PAYER
      responses:
        '200':
          description: GroupTransaction created successfully
        '400':
          description: Invalid data provided
          content:
            application/json:
              schema:
                type: string
                example: "Invalid data: {error message}"
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                type: string
                example: "Group not found with ID: {groupId}"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                example: "Failed to create GroupTransaction."
      tags:
        - Transactions
